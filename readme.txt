Этот проект предназначен для сбора информации о вакансиях с разных платформ в России, сохранения данных в файл и обеспечения удобного взаимодействия с ними через консоль. Проект основан на объектно-ориентированном программировании (ООП) и включает следующие ключевые элементы:
	1	Абстрактный класс для работы с API сайтов с вакансиями: Создается абстрактный класс AbstractClassAPI, от которого наследуются классы, специфичные для конкретных платформ, такие как HeadHunterAPI и SuperJobAPI. Эти классы могут подключаться к API и получать вакансии.
	2	Класс для работы с вакансиями: Класс Vacancy определяет атрибуты для представления информации о вакансиях, такие как название, ссылка, зарплата, описание и требования. Он также поддерживает методы для сравнения вакансий по зарплате и валидации данных.
	3	Абстрактный класс для сохранения и получения данных из файла: Создается абстрактный класс AbstractFileHandler, который обязывает реализовать методы для добавления вакансий в файл, получения данных из файла на основе заданных критериев и удаления информации о вакансиях. Примером реализации этого класса служит JSONSaver, который сохраняет информацию о вакансиях в JSON-файл.
	4	Функция для взаимодействия с пользователем: Функция user_interaction взаимодействует с пользователем через консоль. Она предоставляет пользователю различные опции, такие как выбор платформы для получения вакансий, поисковый запрос, вывод топ-N вакансий по зарплате, сортировку вакансий, фильтрацию по ключевым словам и многое другое.
	5	Пример использования: В конце представлен пример использования, который демонстрирует, как создавать экземпляры классов для работы с API, получать вакансии, создавать экземпляры вакансий, сохранять информацию в файл, взаимодействовать с пользователем и выводить вакансии в консоль.
Как начать использовать проект:
	•	Создайте экземпляры классов для работы с конкретными платформами, такие как HeadHunterAPI и SuperJobAPI.
	•	Получите вакансии с разных платформ, указав поисковый запрос.
	•	Создайте экземпляры класса Vacancy для представления информации о вакансиях.
	•	Сохраните информацию о вакансиях в файл, используя классы для работы с файлами, например, JSONSaver.
	•	Взаимодействуйте с пользователем через функцию user_interaction, чтобы выполнить различные действия с вакансиями.
Критерии оценивания:
	•	Проект выложен на GitHub.
	•	README файл понятно объясняет назначение и использование проекта.
	•	В Git есть точечные коммиты, демонстрирующие этапы разработки.
	•	Код программы организован с учетом принципов ООП, читаем и соответствует стандартам кодирования (хороший нейминг, наличие docstring, использование типизации).
	•	В проекте используются абстрактные классы, и магические методы переопределены, где это уместно.
	•	Для работы с API используется библиотека requests.
	•	Программа создает файл, в котором хранится информация о вакансиях.
	•	Пользователь может выполнять действия с вакансиями через консоль и получать информацию в удобном формате.
